package com.seppius.i18n.plurals;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.Locale;

import android.content.res.Resources;
import android.content.res.Resources.*;

@SuppressWarnings("nls")
public class PluralResources 
{
	private final Resources resources;
	private final Method getResourceBagTextMethod;
	private PluralRules rules;
	private String language;

    public PluralResources(final Resources resources) throws SecurityException, NoSuchMethodException
	{
		this.resources = resources;
		getResourceBagTextMethod = resources.getAssets().getClass().getDeclaredMethod("getResourceBagText", int.class, int.class);
		getResourceBagTextMethod.setAccessible(true);
	}
	
    /**
     * Return the string value associated with a particular resource ID for a particular
     * numerical quantity, substituting the format arguments as defined in
     * {@link java.util.Formatter} and {@link java.lang.String#format}. It will be
     * stripped of any styled text information.
     *
     * @param id The desired resource identifier, as generated by the aapt
     *           tool. This integer encodes the package, type, and resource
     *           entry. The value 0 is an invalid identifier.
     * @param quantity The number used to get the correct string for the current language's
     *           plural rules.
     * @param formatArgs The format arguments that will be used for substitution.
     *
     * @throws NotFoundException Throws NotFoundException if the given ID does not exist.
     *
     * @return String The string data associated with the resource,
     * stripped of styled text information.
     */

    @SuppressWarnings("deprecation")
    public final String getQuantityString(final int id, final int quantity, final Object... formatArgs) throws NotFoundException
    {
        return String.format(resources.getConfiguration().locale, getQuantityString(id, quantity), formatArgs);
    }
	
	private String getQuantityString(final int id, final int quantity) throws NotFoundException
	{
	    // Android 3.0 and later have fixed the problem with plurals,
	    // may consider to use system function, will lose special handling of ZERO though
	    // if ( Build.SDK_INT >= 11 )
	    //    return resources.getQuantityString(id, quantity);
	    
	    final Locale locale = Locale.getDefault();
	    if (!locale.getLanguage().equals(language))
        {
	        language = locale.getLanguage(); 
            rules = PluralRules.ruleForLocale(locale);
	    }
	    
	    if (rules == null)
		{
			return resources.getQuantityString(id, quantity);
		}
	        
		if (getResourceBagTextMethod == null)
		{
			throw new IllegalArgumentException();
		}
		
		Object format = null;
		try 
		{
			// special case -- if translator added special rule for ZERO we disregard language rules
            if (quantity == 0)
			{
				format = getResourceBagTextMethod.invoke(resources.getAssets(), id, PluralRules.ID_ZERO);
			}
				
			if (format == null)
			{
				format = getResourceBagTextMethod.invoke(resources.getAssets(), id, PluralRules.attrForQuantity(rules.quantityForNumber(quantity)));
			}
			
			if (format == null)
			{
				format = getResourceBagTextMethod.invoke(resources.getAssets(), id, PluralRules.ID_OTHER);
			}
			
		}
		catch (final IllegalArgumentException | IllegalAccessException | InvocationTargetException e)
		{
			throw new NotFoundException(e.getMessage());
		}

		if (format == null)
		{
			throw new android.content.res.Resources.NotFoundException("Plural resource ID #0x" + Integer.toHexString(id)
					+ " quantity=" + quantity
					+ " item=" + PluralRules.stringForQuantity(rules.quantityForNumber(quantity)));		
		}
		
		return format.toString();
	}
}
